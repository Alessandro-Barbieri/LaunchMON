.TH LaunchMON 3 "FEBRUARY 2008" LaunchMON "LaunchMON Back-End API"

.SH NAME
LMON_be_barrier LMON_be_broadcast LMON_be_gather LMON_be_scatter \- LaunchMON back-end API: collective communication functions.  

.SH SYNOPSIS
.B #include <lmon_be.h>
.PP
.BI "lmon_rc_e LMON_be_barrier ( );"
.PP
.BI "lmon_rc_e LMON_be_broadcast ( void *" buf ", int " numbytes " );"
.PP
.BI "lmon_rc_e LMON_be_gather ( void *" sendbuf ", int " perElemNumbytes ", void *" recvbuf " );"
.PP
.BI "lmon_rc_e LMON_be_scatter ( void *" sendbuf ", int " perElemNumbytes ", void *" recvbuf " );"
.PP
.B cc ... -lmonbeapi

.SH DESCRIPTION
\fBLMON_be_barrier()\fR, \fBLMON_be_broadcast()\fR, \fBLMON_be_gather()\fR,
and \fBLMON_be_scatter()\fR provide collective communication services to 
back-end tool daemons. Thus, these functions require all the back-end daemons 
associated with a session (see \fBLMON_launchAndSpawnDaemons\fR(3)) 
to participate in the calls for successful transactions.  

The \fBLMON_be_barrier()\fR function blocks the calling daemon until 
all daemons have called it. 

The \fBLMON_be_broadcast()\fR function broadcasts the data 
from the master back-end daemon to the rest. \fIbuf\fR is the 
starting address of the send buffer for the master and 
the starting address of the receive buffer for the slave daemons. The \fInumbyte\fR 
argument specifies the total number of bytes in \fIbuf\fR.

The \fBLMON_be_gather ()\fR function allows the master daemon 
to gather data into \fIrecvbuf\fR which is hence only meaningful to
the master. Each back-end daemon must provide its per-daemon data thru
the \fIsendbuf\fR argument. \fIperElemNumbytes\fR specifies the number 
of bytes in \fIsendbuf\fR.

The \fBLMON_be_scatter()\fR function allows the master daemon 
to scatter \fIsendbuf\fR to all back-end daemons. Thus,
\fIsendbuf\fR is only significant to the master. 
Each daemon receives its own portion via the \fIrecvbuf\fR
argument. \fIperElemNumbytes\fR specifies the number of bytes
in \fIrecvbuf\fR. 

.SH RETURN VALUE
These functions return \fBLMON_OK\fR
on success; otherwise, an LMON error code is returned 
as described below. 

.SH ERRORS
.TP
.B LMON_OK
Success.
.TP
.B LMON_ESUBCOM
Encountered an error during a communication subsystem operation. 
.TP
.B LMON_EINVAL
Encountered any other erroneous conditions. 

.SH AUTHOR
Dong H. Ahn <ahn1@llnl.gov>

.SH "SEE ALSO"
.BR LMON_fe_init(3),
.BR LMON_fe_createSession(3),
.BR LMON_fe_attachAndSpawnDaemons(3),
.BR LMON_fe_launchAndSpawnDaemons(3),
.BR LMON_fe_kill(3),
.BR LMON_fe_detach(3),
.BR LMON_fe_shutdownDaemons(3),
.BR LMON_fe_regUnpackForBeToFe(3),
.BR LMON_fe_regPackForFeToBe(3),
.BR LMON_fe_putToBeDaemonEnv(3),
.BR LMON_fe_sendUsrDataBe(3),
.BR LMON_fe_recvUsrDataBe(3),
.BR LMON_fe_getProctable(3),
.BR LMON_fe_getProctableSize(3),
.BR LMON_fe_getResourceHandle(3),
.BR LMON_fe_regErrorCB(3),
.BR LMON_fe_regStatusCB(3),
.BR LMON_fe_getRMInfo(3),
.BR LMON_be_init(3),
.BR LMON_be_finalize(3),
.BR LMON_be_getMyRank(3),
.BR LMON_be_getSize(3),
.BR LMON_be_amIMaster(3),
.BR LMON_be_handshake(3),
.BR LMON_be_ready(3),
.BR LMON_be_regPackForBeToFe(3),
.BR LMON_be_regUnpackForFeToBe(3),
.BR LMON_be_recvUsrData(3),
.BR LMON_be_sendUsrData(3),
.BR LMON_be_getMyProctab(3),
.BR LMON_be_getMyProctabSize(3)

